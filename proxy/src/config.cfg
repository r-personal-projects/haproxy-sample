global
    tune.ssl.default-dh-param 2048

defaults
    option forwardfor except 127.0.0.1
    mode http
    timeout connect 1h
    timeout client 1h
    timeout server 1h
    # if you want to use custom error-pages
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# stats, may be removed in production
listen stats
    bind *:8404 ssl crt /certs/live/
    stats enable
    stats uri /monitor
    stats refresh 5s

# redirects all your traffic to https, you don't need http
frontend frontend-http
    bind *:80
    http-request redirect scheme https

# accepting all https-traffic and route it to your 
frontend frontend-https
    # listen on port 443 and include all certificates
    bind *:443 ssl crt /certs/live/

	option forwardfor
  	http-request set-header X-Forwarded-Port %[dst_port]
  	http-request add-header X-Forwarded-Proto https if { ssl_fc }

	http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

    # determine the requested domain and save it to the is_...-variable (acts lik a boolean value)
	acl is_rubeen_one hdr(host) -i rubeen.one
	acl is_rubeen_dev hdr(host) -i rubeen.dev
	
    # check for subdomain (and host, to choose the correct backend)
	acl is_no_subdomain hdr_beg(host) -i ""
	# f.e.: gitlab.rubeen.dev & docker.rubeen.dev
    acl is_gitlab_dev hdr_sub(host) -i gitlab is_rubeen_dev
	acl is_docker_dev hdr_sub(host) -i docker is_rubeen_dev

	use_backend docker_rubeen_dev if is_docker_dev
	use_backend gitlab_rubeen_dev if is_gitlab_dev

    # backends, if none of the above backends was capable
	use_backend rubeen_dev if is_rubeen_dev
	use_backend rubeen_one if is_rubeen_one

    # backend for those who access your server by ip / another domain
	default_backend rubeen_one

# used to route traffic in our created network
resolvers dockerdns
    nameserver dns 127.0.0.11:53


# routes our traffic. gitlab_rubeen_dev is a name used by stats, gitlab-rubeen-dev is the name of the docker-container
#   & :80 is the internal application port. 'resolvers dockerdns' is important to find docker-container by name
backend gitlab_rubeen_dev
    server gitlab_rubeen_dev gitlab-rubeen-dev:80 check init-addr last,libc,none resolvers dockerdns

backend docker_rubeen_dev
    server gitlab_rubeen_dev gitlab-rubeen-dev:5005 check init-addr last,libc,none resolvers dockerdns

backend rubeen_dev
    server rubeen_dev-test test-rubeen-dev:80 check init-addr last,libc,none resolvers dockerdns

backend rubeen_one
    server rubeen_one-wordpress wordpress-rubeen-one:80 check init-addr last,libc,none resolvers dockerdns